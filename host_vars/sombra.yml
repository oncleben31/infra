---
# generic settings
hostname_sombra: sombra

main_username: oncleben31
main_groupname: "{{ main_username }}"
main_uid: "1000"
main_gid: "{{ main_uid }}"

ntp_timezone: "Europe/Paris"


# grog.package
package_list:
  - name: htop
  - name: tree

# oh-my-zsh custom plugins (onceleben31-sombra)
custom_plugins:
  zsh-autosuggestions: https://github.com/zsh-users/zsh-autosuggestions

custom_themes:
  powerlevel10k/powerlevel10k: 
    src: https://github.com/romkatv/powerlevel10k.git
    folder: powerlevel10k

# gantsign.oh-my-zsh
oh_my_zsh_theme: robbyrussell
oh_my_zsh_install: yes
oh_my_zsh_plugins:
  - git
  - z

users:
  - username: "{{ main_username }}"
    oh_my_zsh:
      theme: powerlevel10k/powerlevel10k
      plugins:
        - git
        - docker-compose
        - z
        - zsh-autosuggestions

# oncleben31-sombra
sombra_main_storage_path: /mnt/storage

data_disks:
  - { path: /mnt/storage, diskbyid: /dev/disk/by-id/scsi-1ATA_ST1000DM003-1ER162_Z4YB25V9-part1, fs: ext4, opts: defaults }

# geerlingguy.docker
docker_users:
  - "{{ main_username }}"

# ironicbadger.docker_compose_generator
appdata_path: "{{sombra_main_storage_path}}/appdata"
download_path: /opt/downloads
global_env_vars:
  - "PUID={{ main_uid }}"
  - "PGID={{ main_gid }}"
  - "TZ={{ ntp_timezone }}"
docker_compose_generator_uid: "{{ main_uid }}"
docker_compose_generator_gid: "{{ main_gid }}"
docker_compose_generator_output_path: "/home/{{ main_username }}"

# oncleben31-traefik
traefik_file_provider: true
traefik_enable_dashboard: true
traefik_insecure_transport: true

containers:
###
  - service_name: traefik
    # container_name: tr
    active: true
    image: traefik
    ports:
      - 80:80
      - 443:443
    extra_hosts:
      - host.docker.internal:172.17.0.1
    environment:
     - "OVH_APPLICATION_KEY={{ secret_ovh_app_key }}"
     - "OVH_APPLICATION_SECRET={{ secret_ovh_app_secret }}"
     - "OVH_CONSUMER_KEY={{ secret_consumer_key }}"
     - "OVH_ENDPOINT={{ secret_ovh_endpoint }}"
    volumes:
      - "{{ appdata_path }}/traefik:/etc/traefik"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.rule=Host(`traefik.{{ secret_local_domain }}`)"
      - "traefik.http.routers.traefik.service=api@internal"
    include_global_env_vars: true

###
  - service_name: plex
    active: true
    image: plexinc/pms-docker:plexpass
    network_mode: host
    volumes:
      - "{{ appdata_path }}/plex/config:/config"
      - /opt/appdata/plex/transcode:/transcode
      - "{{ sombra_main_storage_path }}:/data"
    labels:
      - traefik.enable=true
      - traefik.http.routers.plex.entrypoints=websecure
      - "traefik.http.routers.plex.rule=Host(`plex.{{ secret_local_domain }}`)"
      - traefik.http.services.plex.loadbalancer.server.port=32400
      - traefik.http.services.plex.loadbalancer.server.scheme=https
    include_global_env_vars: true
    restart: unless-stopped
###
  - service_name: nzbget
    active: true
    image: linuxserver/nzbget
    volumes:
      - "{{ appdata_path }}/nzbget/config:/config"
      - "{{ download_path }}:/downloads"
    labels:
      - traefik.enable=true
      - traefik.http.routers.nzbget.rule=Host(`nzbget.{{ secret_local_domain }}`)
      - traefik.http.routers.nzbget.entrypoints=websecure
    restart: unless-stopped
    include_global_env_vars: true
###
  - service_name: transmission
    active: true
    image: linuxserver/transmission
    volumes:
      - "{{ appdata_path }}/transmission:/config"
      - "{{ download_path }}:/downloads"
      - "{{ sombra_main_storage_path }}/watch:/watch"
    labels:
      - traefik.enable=true
      - "traefik.http.routers.transmission.rule=Host(`transmission.{{ secret_local_domain }}`)"
      - traefik.http.routers.transmission.entrypoints=websecure
      - traefik.http.services.transmission.loadbalancer.server.port=9091
    # ports:
    #   - 9091:9091
    #   - 51413:51413
    #   - 51413:51413/udp
    include_global_env_vars: true
    restart: unless-stopped
###
  - service_name: sonarr
    active: true
    image: linuxserver/sonarr:latest
    depends_on:
      - nzbget
    volumes:
      - "{{ appdata_path }}/sonarr:/config"
      - "{{ download_path }}/complete/tv:/downloads/complete/tv"
      - "{{ sombra_main_storage_path }}/tv:/tv"
    labels:
      - traefik.enable=true
      - "traefik.http.routers.sonarr.rule=Host(`tv.{{ secret_local_domain }}`)"
      - traefik.http.routers.sonarr.entrypoints=websecure
    restart: unless-stopped
    include_global_env_vars: true
###
  - service_name: radarr
    active: true
    image: linuxserver/radarr
    volumes:
      - "{{ appdata_path }}/radarr:/config"
      - "{{ sombra_main_storage_path }}/movies:/movies"
      - "{{ download_path }}/complete/movies:/downloads/complete/movies"
    labels:
      - traefik.enable=true
      - "traefik.http.routers.radarr.rule=Host(`movies.{{ secret_local_domain }}`)"
      - traefik.http.routers.radarr.entrypoints=websecure
    restart: unless-stopped
    include_global_env_vars: true
###
  - service_name: lidarr
    active: true
    image: linuxserver/lidarr
    volumes:
      - "{{ appdata_path }}/lidarr:/config"
      - "{{ sombra_main_storage_path }}/music:/music"
      - "{{ download_path }}/complete/music:/downloads/complete/music"
    labels:
      - traefik.enable=true
      - "traefik.http.routers.lidarr.rule=Host(`music.{{ secret_local_domain }}`)"
      - traefik.http.routers.lidarr.entrypoints=websecure
    restart: unless-stopped
    include_global_env_vars: true
###
  - service_name: bazarr
    active: true
    image: linuxserver/bazarr
    volumes:
      - "{{ appdata_path }}/bazarr:/config"
      - "{{ sombra_main_storage_path }}/movies:/movies"
      - "{{ sombra_main_storage_path }}/tv:/tv"
    labels:
      - traefik.enable=true
      - "traefik.http.routers.bazarr.rule=Host(`subs.{{ secret_local_domain }}`)"
      - traefik.http.routers.bazarr.entrypoints=websecure
    restart: unless-stopped
    include_global_env_vars: true
###
  - service_name: prowlarr
    active: true
    image: linuxserver/prowlarr:develop
    volumes:
      - "{{ appdata_path }}/prowlarr:/config"
    labels:
      - traefik.enable=true
      - "traefik.http.routers.prowlarr.rule=Host(`indexer.{{ secret_local_domain }}`)"
      - traefik.http.routers.prowlarr.entrypoints=websecure
    restart: unless-stopped
    include_global_env_vars: true
###
  - service_name: jackett
    active: true
    image: linuxserver/jackett
    environements:
      - AUTO_UPDATE=true #optional
      - RUN_OPTS=<run options here> #optional
    volumes:
      - "{{ appdata_path }}/jackett:/config"
      - "{{ download_path }}:/downloads"
    ports:
      - 9117:9117
    restart: unless-stopped
    include_global_env_vars: true
###
  - service_name: flaresolverr
    active: true
    image: ghcr.io/flaresolverr/flaresolverr:latest
    environment:
      - LOG_LEVEL=info
      - LOG_HTML=false
      - CAPTCHA_SOLVER=none
    ports:
      - "8191:8191"
    restart: unless-stopped 
    include_global_env_vars: true
###
  - service_name: watchtower
    active: true
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    include_global_env_vars: true
###
  - service_name: mealie
    active: true
    image: hkotel/mealie
    labels:
      - traefik.enable=true
      - traefik.http.routers.mealie.rule=Host(`mealie.{{ secret_local_domain }}`)
      - traefik.http.routers.mealie.entrypoints=websecure
      - traefik.http.services.mealie.loadbalancer.server.port=80
    environment:
      - DB_TYPE=sqlite
    volumes:
      - "{{ appdata_path }}/mealie:/app/data"
    restart: unless-stopped
    include_global_env_vars: true 
###
  - service_name: sui
    active: true
    image: griefed/sui
    labels:
      - traefik.enable=true
      - "traefik.http.routers.sui.rule=Host(`sui.{{ secret_local_domain }}`)"
      - traefik.http.routers.sui.entrypoints=websecure
    volumes:
      - "{{ appdata_path }}/sui:/config"
    environment:
      - PROTOCOL=http
      - "DOMAIN=sui.{{ secret_local_domain }}"
    include_global_env_vars: true
    restart: unless-stopped
###
  - service_name: dozzle
    active: true
    image: amir20/dozzle:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - traefik.enable=true
      - "traefik.http.routers.dozzle.rule=Host(`logs.{{ secret_local_domain }}`)"
      - traefik.http.routers.dozzle.entrypoints=websecure
    restart: unless-stopped
    include_global_env_vars: true
###


